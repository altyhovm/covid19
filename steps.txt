newfolder name is determined by user.
replace https://aaronlilly.github.io with your io from github.

1.within (examplefolder) copied externalJsExample and pasted into (newfolder) (as this will be an external file example (actually json)).
2. opened (newfolder/externalJsExample) folder opened example.html 
	2a. attempted search (which failed)(this is what it should do at this point.
	2b. using GithubDesktop, commited changes, then pushed.
	2c. with github pages in use via github (if not sure how to make public go to settings in github)
		opened a browser window and navigated to. 
		https://aaronlilly.github.io/<newfolder>/externalJsExample/example.html
		if this is successful, then it means the .json file has also been uploaded to github.
3. Within SublimeText (editor) opened newfodler/externalJsExample/scripts/AppleSearch4.js
	3a. within the code for the $.ajax, changed  
		url: " https://aaronlilly.github.io/ApiExample/Apple4/apple4.json"
			to 
		url: " https://aaronlilly.github.io/<newfolder>/externalJsExample/apple4.json"
	3b. Saved AppleSearch4.js in SublimeText
4. Within GithubDeskTop commited changes and pushed to origin.
5. Opened webbrowser and navigated to 
"https://aaronlilly.github.io/<newfolder>/externalJsExample/apple4.json
	5a. if this is successful, we are on the right path!
	5b. navigated to https://aaronlilly.github.io/<newfolder>/externalJsExample/example.html
	5c. tested search, it was successful!!! (if not you did something wrong).
6. now that we have a working example, were going to do it all again.

7. within (newfolder) copied externalJsExample and pasted within same (newfolder) 
	7a. changed name of this copied folder
	7b. the reason i do this is if the example works, i want to get an alternate working next, so that if i mess up I can just go back to the example, I then can take the alternate, and turn it into my final project. this copied folder will be listed here as copiedfolder
	7c. within copiedfolder opened scripts/AppleSearch4.js (opened with SublimeText)
	changed  url: "https://aaronlilly.github.io/<newfolder>/externalJsExample/apple4.json"
	to 
	 url: "https://aaronlilly.github.io/<newfolder>/<copiedfolder>/apple4.json"
	(in this case it was https://aaronlilly.github.io/Coronavirus/covid19/apple4.json)
	7d. Saved in Sublime, commited and pushed in GithubDesktop
	7e. Opened https://aaronlilly.github.io/<newfolder>/<copiedfolder>/apple4.json in web browser. success!
	7f. Opened https://aaronlilly.github.io/<newfolder>/<copiedfolder>/example.html	in web browser, and tried search function. this was successful!!! (in this case https://aaronlilly.github.io/Coronavirus/covid19/example.html)

8. with that working let's play!!! From now on we will only be working in the copiedfolder if you are paranoid like me, make another copy of it or just rely on git/github.

9. for this document the copiedfolder will now be refered to as ./cf/

10. now we get to decide what we want to do, first i want info to load when the page comes up this info will be replaced when i search something specific. 
	10a. before i get too fancy, i will try to get the site to append the word "hi" on load.
		10a1. within AppleSearch4.js I write the following code (after the end of the first function)
		 $(document).ready(function ()              {
                     {$(document).ready(function () {  
                                 $('#ArrayD').append("hi") })             };    });
		10a2. i save and test which works as i see the "hi" appended to the page. 

11. next we will look at the structure of the data that we want to actually append on the page. 
	11a. navigate to https://aaronlilly.github.io/Coronavirus/covid19/apple4.json or whatever you have in your url in the $.ajax (call)
	11b. im going to add "console.log(data)" to my code for the onload function, it should look like this
	 $(document).ready(function ()             {
		$(document).ready(function () {  
                                 $('#ArrayD').append("hi");
                                 console.log(data)      ;                 })            }; });
	11c. then i will bring up the console and see what it writes.
		11c1. this shouldnt work because console does not know what "data" is. we need to bring in the $.ajax, or move the function into the other,  DRY coding would say to combine the functions, but i know the first function works, i'd rather have a second, even repeating function. proper coding be wrecked.
		11c2. this code is what i will have 
		  $(document).ready(function ()  
            		{
                    $.ajax
                        ({
                    method: "GET",
                    url: "https://aaronlilly.github.io/Coronavirus/covid19/apple4.json"
                         }).done(function(data) 
                               {$(document).ready(function () {  
				console.log(data);
                                 $('#ArrayD').append("hi");
                                            })                        });                            });

	12. now my console.log works, it should show an array (to view go to Inspect or developer tools then console).
		12a. now we want to append specific objects from the data instead of having the array written to the console, 
		12b. in this case my data was results[0].fruit to retrieve the word "apple"
		12c. so i will change my append to data.results[0].fruit.
		12d. heres my code again.
		  $(document).ready(function ()  
          	  {                $.ajax
                        ({
                    method: "GET",
                    url: "https://aaronlilly.github.io/Coronavirus/covid19/apple4.json"
                         }).done(function(data) 

                               {$(document).ready(function () {  
                                 $('#ArrayD').append(data.results[0].fruit);
                                 console.log(data);          })                        });                  });
	13. now that this works, ill save/commit/push
	
	14. next we will work with the data we actually want to work with. in this case i wanted to work with an api for the corona virus (why not?)

	15. let's get the use a web browser to look at the data again.
		15a. in this case was https://corona.lmao.ninja/countries (no i didnt build the site)
		15b. because i havent studied the structure of the data, my code will be this currenlty with some things commented out ( my append wont work till i fix the structure so i'm just writing to console for now).

  $(document).ready(function ()  
            {
                    $.ajax
                        ({
                    method: "GET",
                    url: "https://corona.lmao.ninja/countries"
                         }).done(function(data) 

                               {$(document).ready(function () {  
                                 //$('#ArrayD').append(data.results[0].fruit);
                                 console.log(data);

          })

                        });
                           });
	16. after looking at the data structure, i will try data[0].country in my console.log
		16a. this should bring write "china" to the console. it is successful.

	17. its now time again to think of the overall site and what do i want to do?
		17a. How about a site where I can search for the name of the country and it shows the number of cases, todays cases, etc maybe in a table?  As I think about this, I realize it may have been easier to have a drop down menu, or list all the names of the countries and then click on the country name to display the info, but we're half way here so why not just do it this way? and at this point, im tired of commenting so ill just do what i want to , have fun .
	


	

	 



 url: "https://aaronlilly.github.io/Coronavirus/covid19/apple4.json"

"https://aaronlilly.github.io/Coronavirus/externalJsExample/apple4.json
https://aaronlilly.github.io/Coronavirus/externalJsExample/example.html